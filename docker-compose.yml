services:
  mysql-lib:
    image: mysql:8.0
    container_name: mysql-lib
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PORT: ${MYSQL_PORT}
    volumes: 
      - ./lib.sql:/docker-entrypoint-initdb.d/lib.sql
    networks:
      - library
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    hostname: ${MYSQL_HOST}

  flask-api:
    restart: unless-stopped
    build: ./api_flask
    container_name: flask-lib
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
    networks:
      - library
    ports:
      - ${FLASK_PORT}:${FLASK_PORT}
    hostname: ${FLASK_HOST}
    depends_on:
      - mysql-lib

  redis-lib:
    image: redis
    container_name: redis-lib
    command: redis-server
    environment:
      REDIS_ARGS: "--user ${REDIS_USER} on >${REDIS_PASSWORD} ~* allcommands --user default off nopass nocommands"
    networks:
      - library
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    hostname: ${REDIS_HOST}

  django-backend:
    restart: unless-stopped
    build: ./backend_django
    container_name: django-lib
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_USER: ${REDIS_USER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    networks:
      - library
    ports:
      - "8013:8013"
    depends_on:
      - redis-lib
      - flask-api
      - mysql-lib

  celery:
    restart: unless-stopped
    build: ./backend_django
    container_name: worker-lib
    command: ./run_worker.sh
    volumes:
      - .:/app
    depends_on:
      - redis-lib
    networks:
      - library

  celery-beat:
    restart: unless-stopped
    build: ./backend_django
    container_name: beat-lib
    command: ./run_beat.sh
    volumes:
      - .:/app
    depends_on:
      - redis-lib
    networks:
      - library

networks:
  library:
    driver: bridge
